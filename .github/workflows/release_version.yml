name: 🚀 Create Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

permissions:
  contents: write
  packages: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '21'
        registry-url: 'https://npm.pkg.github.com'
        scope: '@marant7'
        
    - name: 🧪 Test Customer App
      working-directory: customer-app
      run: |
        npm ci
        npm run test:cov
        npm run build
        
    - name: 🧪 Test Notifications
      working-directory: notifications
      run: |
        npm ci
        npm run test:cov
        npm run build
        
    - name: 📦 Create Customer App Package
      working-directory: customer-app
      run: |
        node -e "
          const pkg = require('./package.json');
          pkg.name = '@marant7/customer-app-ramos';
          pkg.version = '${{ github.ref_name }}'.replace('v', '');
          delete pkg.private;
          pkg.publishConfig = { registry: 'https://npm.pkg.github.com' };
          pkg.author = 'Mario Antonio Flores Ramos';
          pkg.description = 'Customer App implementing Facade Design Pattern';
          require('fs').writeFileSync('./package.json', JSON.stringify(pkg, null, 2));
        "
        npm pack
        
    - name: 📦 Create Notifications Package
      working-directory: notifications
      run: |
        node -e "
          const pkg = require('./package.json');
          pkg.name = '@marant7/notifications-ramos';
          pkg.version = '${{ github.ref_name }}'.replace('v', '');
          delete pkg.private;
          pkg.publishConfig = { registry: 'https://npm.pkg.github.com' };
          pkg.author = 'Mario Antonio Flores Ramos';
          pkg.description = 'Notifications App implementing Bridge Design Pattern';
          require('fs').writeFileSync('./package.json', JSON.stringify(pkg, null, 2));
        "
        npm pack
        
    - name: 🏷️ Get Version
      id: get_version
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "VERSION=${{ github.ref_name }}" >> $GITHUB_OUTPUT
        fi
        
    - name: 📋 Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_PACKAGE }}
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        release_name: 🎉 Release ${{ steps.get_version.outputs.VERSION }}
        body: |
          ## 🏗️ Patrones de Diseño Estructurales - Lab 02
          
          **Autor:** Mario Antonio Flores Ramos
          
          ### 📦 Paquetes Incluidos
          - `@marant7/customer-app-ramos`: Implementación del patrón Facade
          - `@marant7/notifications-ramos`: Implementación del patrón Bridge
          
          ### 🛠️ Instalación
          ```bash
          npm install @marant7/customer-app-ramos
          npm install @marant7/notifications-ramos
          ```
        draft: false
        prerelease: false
        
    - name: 📤 Upload Customer App Package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_PACKAGE }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./customer-app/marant7-customer-app-ramos-*.tgz
        asset_name: customer-app-ramos-${{ steps.get_version.outputs.VERSION }}.tgz
        asset_content_type: application/gzip
        
    - name: 📤 Upload Notifications Package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_PACKAGE }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./notifications/marant7-notifications-ramos-*.tgz
        asset_name: notifications-ramos-${{ steps.get_version.outputs.VERSION }}.tgz
        asset_content_type: application/gzip